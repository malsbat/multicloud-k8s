---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-nfn-sa
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: k8s-nfn-cr
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - nodes
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - nfn-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - k8s.plugin.opnfv.org
  resources:
  - '*'
  - providernetworks
  verbs:
  - '*'
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8s-nfn-crb
subjects:
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: k8s-nfn-cr
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: nfn-operator
  namespace: {{ .Release.Namespace }}
spec:
  type: NodePort
  ports:
  - port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    name: nfn-operator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ovn-controller-network
  namespace: {{ .Release.Namespace }}
data:
  OVN_SUBNET: {{ .Values.ovnSubnet }}
  OVN_GATEWAYIP: {{ .Values.ovnGatewayIP }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfn-operator
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: nfn-operator
  template:
    metadata:
      labels:
        name: nfn-operator
    spec:
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: k8s-nfn-sa
      containers:
        - name: nfn-operator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/bin/entrypoint", "operator"]
          envFrom:
          - configMapRef:
              name: ovn-controller-network
          ports:
          - containerPort: 50000
            protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "nfn-operator"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ovn4nfv-cni-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: ovn4nfv
data:
  ovn4nfv_k8s.conf: |
          [logging]
          loglevel=5
          logfile=/var/log/openvswitch/ovn4k8s.log

          [cni]
          conf-dir=/etc/cni/net.d
          plugin=ovn4nfvk8s-cni

          [kubernetes]
          kubeconfig=/etc/cni/net.d/ovn4nfv-k8s.d/ovn4nfv-k8s.kubeconfig
  00-network.conf: |
          {
            "name": "ovn4nfv-k8s-plugin",
            "type": "ovn4nfvk8s-cni",
            "cniVersion": "0.3.1"
          }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ovn4nfv-cni
  namespace: {{ .Release.Namespace }}
  labels:
    app: ovn4nfv
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: ovn4nfv
  template:
    metadata:
      labels:
        app: ovn4nfv
    spec:
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: k8s-nfn-sa
      containers:
      - name: ovn4nfv
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/entrypoint", "cni"]
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 50Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        - name: cniconf
          mountPath: /host/etc/openvswitch
        - name: ovn4nfv-cfg
          mountPath: /tmp/ovn4nfv-conf
        - name: ovn4nfv-cni-net-conf
          mountPath: /tmp/ovn4nfv-cni
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
        - name: cniconf
          hostPath:
            path: /etc/openvswitch
        - name: ovn4nfv-cfg
          configMap:
            name: ovn4nfv-cni-config
            items:
            - key: ovn4nfv_k8s.conf
              path: ovn4nfv_k8s.conf
        - name: ovn4nfv-cni-net-conf
          configMap:
            name: ovn4nfv-cni-config
            items:
            - key: 00-network.conf
              path: 00-network.conf
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nfn-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app: nfn-agent
spec:
  selector:
    matchLabels:
      app: nfn-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nfn-agent
    spec:
      hostNetwork: true
      hostPID: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccountName: k8s-nfn-sa
      containers:
      - name: nfn-agent
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/entrypoint", "agent"]
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 50Mi
        env:
          - name: NFN_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN", "SYS_ADMIN", "SYS_PTRACE"]
          privileged: true
        volumeMounts:
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
          readOnly: true
        - mountPath: /run/openvswitch
          name: host-run-ovs
        - mountPath: /var/run/openvswitch
          name: host-var-run-ovs
        - mountPath: /var/run
          name: host-var-run
        - mountPath: /host/proc
          name: host-proc
        - mountPath: /host/sys
          name: host-sys
        - mountPath: /var/run/ovn4nfv-k8s-plugin
          name: host-var-cniserver-socket-dir
      volumes:
      - name: host-run-ovs
        hostPath:
          path: /run/openvswitch
      - name: host-var-run-ovs
        hostPath:
          path: /var/run/openvswitch
      - name: host-var-run-dbus
        hostPath:
          path: /var/run/dbus
      - name: host-var-cniserver-socket-dir
        hostPath:
          path: /var/run/ovn4nfv-k8s-plugin
      - name: host-var-run
        hostPath:
          path: /var/run
      - name: host-proc
        hostPath:
          path: /proc
      - name: host-sys
        hostPath:
          path: /sys
