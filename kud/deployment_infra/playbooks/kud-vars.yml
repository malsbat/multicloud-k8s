---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2018
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

base_dest: /tmp

ovn_kubernetes_dest: "{{ base_dest }}/ovn-kubernetes"
ovn_kubernetes_source_type: "tarball"
ovn_kubernetes_version: 0.3.0
ovn_kubernetes_url: "https://github.com/openvswitch/ovn-kubernetes/archive/v{{ ovn_kubernetes_version }}.tar.gz"
#ovn_kubernetes_source_type: "source"
#ovn_kubernetes_version: 456a0857956988f968bb08644c650ba826592ec1
#ovn_kubernetes_url: "https://github.com/openvswitch/ovn-kubernetes"

criproxy_dest: "/usr/local/bin"
criproxy_source_type: "binary"
criproxy_version: 0.14.0
criproxy_url: "https://github.com/Mirantis/criproxy/releases/download/v{{ criproxy_version }}/criproxy"
#criproxy_dest: "{{ base_dest }}/criproxy"
#criproxy_source_type: "source"
#criproxy_version: b5ca5a6cec278e2054dface4f7a3e111fb9ab84b
#criproxy_url: "https://github.com/Mirantis/criproxy"
virtlet_dest: "{{ base_dest }}/virtlet"
virtlet_source_type: "binary"
virtlet_version: 1.4.4
virtlet_url: "https://github.com/Mirantis/virtlet/releases/download/v{{ virtlet_version }}/virtletctl"
#virtlet_source_type: "source"
#virtlet_version: 68e11b8f1db2c78b063126899f0e60910700975d
#virtlet_url: "https://github.com/Mirantis/virtlet"


istio_dest: "{{ base_dest }}/istio"
istio_source_type: "tarball"
istio_version: 1.0.3
istio_url: "https://github.com/istio/istio/releases/download/{{ istio_version }}/istio-{{ istio_version }}-linux.tar.gz"

# Intel CPU Manager for Kubernetes
cmk_enabled: true
cmk_namespace: kube-system
cmk_use_all_hosts: false # 'true' will deploy CMK on the master nodes too
cmk_untaint_nodes: [compute01, compute02]
cmk_shared_num_cores: 1 # number of CPU cores to be assigned to the "shared" pool on each of the nodes
cmk_exclusive_num_cores: 2 # number of CPU cores to be assigned to the "exclusive" pool on each of the nodes
cmk_git_url: "https://github.com/intel/CPU-Manager-for-Kubernetes.git"
cmk_version: "v1.4.1"
cmk_dir: "/tmp/cmk"
registry_local_address: "localhost:5000"
cmk_pkgs: make,jq
cmk_untaint_required: true
#cmk_shared_mode: packed # choose between: packed, spread, default: packed
#cmk_exclusive_mode: packed # choose between: packed, spread, default: packed

go_version: '1.12.5'
kubespray_version: 2.12.6
helm_client_version: 2.13.1
# kud playbooks not compatible with 2.8.0 - see MULTICLOUD-634
ansible_version: 2.9.7

sriov_dest: "{{ base_dest }}/sriov"
sriov_driver_source_type: "tarball"
sriov_driver_version: 3.7.34
sriov_driver_url: "https://downloadmirror.intel.com/28943/eng/iavf-{{ sriov_driver_version }}.tar.gz"
sriov_package: iavf-3.7.34

qat_dest: "{{ base_dest }}/qat_driver"
qat_driver_source_type: "tarball"
qat_driver_version: 1.7.l.4.6.0-00025
qat_driver_url: "https://01.org/sites/default/files/downloads/{{ qat_package }}.tar.gz"
qat_package: qat1.7.l.4.6.0-00025

optane_dest: "{{ base_dest }}/optane"
optane_ipmctl_source_type: "tarball"
optane_ipmctl_version: 02.00.00.3474
optane_ipmctl_url: "https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/ipmctl/{{ optane_package }}.tar.xz"
optane_ipmctl_package: ipmctl_02.00.00.3474+really01.00.00.3469.orig

kubernetes_config_file: "/etc/kubernetes/kubelet-config.yaml"
cpu_manager:
  policy: "static" # Options: none (disabled), static (default)
  checkpoint_file: "/var/lib/kubelet/cpu_manager_state"
topology_manager:
  policy: "best-effort" # Options: none (disabled), best-effort (default), restricted, single-numa-node

# TODO The below values are copied from kubespray defaults

# Set 127.0.0.1 as fallback IP if we do not have host facts for host
fallback_ips_base: |
  ---
  {% for item in groups['k8s-cluster'] + groups['etcd'] + groups['calico-rr']|default([])|unique %}
  {{ item }}: "{{ hostvars[item].get('ansible_default_ipv4', {'address': '127.0.0.1'})['address'] }}"
  {% endfor %}
fallback_ips: "{{ fallback_ips_base | from_yaml }}"

cluster_name: cluster.local
dns_domain: "{{ cluster_name }}"

# Kubernetes internal network for services, unused block of space.
kube_service_addresses: 10.233.0.0/18

# internal network. When used, it will assign IP
# addresses from this range to individual pods.
# This network must be unused in your network infrastructure!
kube_pods_subnet: 10.233.64.0/18

# Set no_proxy to all assigned cluster IPs and hostnames
no_proxy: >-
  {%- if http_proxy is defined or https_proxy is defined %}
  {%- if loadbalancer_apiserver is defined -%}
  {{ apiserver_loadbalancer_domain_name| default('') }},
  {{ loadbalancer_apiserver.address | default('') }},
  {%- endif -%}
  {%- for item in (groups['k8s-cluster'] + groups['etcd'] + groups['calico-rr']|default([]))|unique -%}
  {{ hostvars[item]['access_ip'] | default(hostvars[item]['ip'] | default(fallback_ips[item])) }},
  {%-   if item != hostvars[item].get('ansible_hostname', '') -%}
  {{ hostvars[item]['ansible_hostname'] }},
  {{ hostvars[item]['ansible_hostname'] }}.{{ dns_domain }},
  {%-   endif -%}
  {{ item }},{{ item }}.{{ dns_domain }},
  {%- endfor -%}
  {%- if additional_no_proxy is defined -%}
  {{ additional_no_proxy }},
  {%- endif -%}
  127.0.0.1,localhost,{{kube_service_addresses}},{{kube_pods_subnet}}
  {%- endif %}

proxy_env:
  http_proxy: "{{ http_proxy| default ('') }}"
  HTTP_PROXY: "{{ http_proxy| default ('') }}"
  https_proxy: "{{ https_proxy| default ('') }}"
  HTTPS_PROXY: "{{ https_proxy| default ('') }}"
  no_proxy: "{{ no_proxy| default ('') }}"
  NO_PROXY: "{{ no_proxy| default ('') }}"
